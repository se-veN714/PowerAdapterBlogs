# -*- coding: utf-8 -*-
# @File    : settings/base.py
# @Time    : 2025/2/3 20:09
# @Author  : seveN1foR
# @Version : 1.0
# @Software: PyCharm
# @Contact : sevencdxxiv@qq.com

"""
本模块提供了基本的Django设置功能的类和函数。
"""
import os
# here put the import lib
"""
Django settings for PowerAdapterBlogs project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-&bb1l!n&3qup4=l*w!u^tdo#_+hqpyx$!aso!)z!7t+hu1_nx("

# Application definition

INSTALLED_APPS = [
    "jazzmin",
    "dal",
    "dal_select2",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django_extensions",
    "widget_tweaks",
    "drf_spectacular",
    "django_redis",
    # my_app
    "security.apps.SecurityConfig",
    "Blogs",
    "config",
    "comment",
    "accounts",
    "music",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "Blogs.middleware.user_id.UserIdMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "PowerAdapterBlogs.urls"

THEMES = 'bulma'  # 更改切换主题

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / 'themes' / THEMES],

        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "django.template.context_processors.static",
            ],
        },
    },
]

WSGI_APPLICATION = "PowerAdapterBlogs.wsgi.application"

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_USER_MODEL = 'accounts.MyUser'

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "zh-hans"
TIME_ZONE = "Asia/Shanghai"

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"

STATIC_ROOT = BASE_DIR / "common_static"

STATICFILES_DIRS = [
    BASE_DIR / "static",
]

MEDIA_URL = "media/"

MEDIA_ROOT = BASE_DIR / "media/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

JAZZMIN_SETTINGS = {
    "site_title": "PowerAdapter 后台",
    "site_header": "PowerAdapter 控制台",
    "site_brand": "PowerAdapter",
    "welcome_sign": "欢迎使用你的后台",
    "topmenu_links": [
        {"name": "首页", "url": "/", "permissions": ["auth.view_user"]},
    ],
    "show_sidebar": True,
    "navigation_expanded": True,
}

REST_FRAMEWORK = {
    "DEFAULT_SCHEMA_CLASS": 'drf_spectacular.openapi.AutoSchema',
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.LimitOffsetPagination",
    "PAGE_SIZE": 10,# 后续可以尝试 Cursor分页
}
LOG_DIR = os.path.join(BASE_DIR, "logs")
os.makedirs(LOG_DIR, exist_ok=True)

info_format = "[{asctime}] INFO (✿◕‿◕) {message}"
warn_format = "[{asctime}] WARN (ಠ_ಠ) {message}"
error_format = "[{asctime}] ERROR (╯°□°）╯︵ ┻━┻ {message}"

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,

    "formatters": {
        "info": {"format": info_format, "style": "{"},
        "warning": {"format": warn_format, "style": "{"},
        "error": {"format": error_format, "style": "{"},
    },

    "handlers": {
        "console": {
            "class": "logging.StreamHandler",
            "formatter": "info",
        },
        "info_file": {
            "class": "logging.handlers.RotatingFileHandler",
            "filename": os.path.join(LOG_DIR, "info.log"),
            "maxBytes": 5 * 1024 * 1024,
            "backupCount": 5,
            "formatter": "info",
            "level": "INFO",
            "encoding": "utf-8",
        },
        "warning_file": {
            "class": "logging.handlers.RotatingFileHandler",
            "filename": os.path.join(LOG_DIR, "warning.log"),
            "maxBytes": 5 * 1024 * 1024,
            "backupCount": 5,
            "formatter": "warning",
            "level": "WARNING",
            "encoding": "utf-8",
        },
        "error_file": {
            "class": "logging.handlers.RotatingFileHandler",
            "filename": os.path.join(LOG_DIR, "error.log"),
            "maxBytes": 5 * 1024 * 1024,
            "backupCount": 5,
            "formatter": "error",
            "level": "ERROR",
            "encoding": "utf-8",
        },
    },

    "loggers": {
        "Blogs": {
            "handlers": ["info_file", "warning_file", "error_file"],
            "level": "DEBUG",
            "propagate": False,  # 阻止再传给 root
        }
    },

    "root": {
        "handlers": ["console"],
        "level": "DEBUG",
    },
}

REDIS_CACHE_URL = 'redis://127.0.0.1:6379/1'
REDIS_SESSIONS_URL = 'redis://127.0.0.1:6379/2'

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": REDIS_CACHE_URL,
        "TIMEOUT": 300,
        "OPTIONS": {
            # 'PASSWORD':'<password>'
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        },
        "CONNECTION_POOL_CLASS": "redis.connection.BlockingConnectionPool"
    },
    "sessions": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": REDIS_SESSIONS_URL,
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}

SESSION_ENGINE = "django.contrib.sessions.backends.cache"
SESSION_CACHE_ALIAS = "sessions"